{
    "date": "2025-05-21T09:09:03.793Z",
    "promptbookVersion": "0.94.0-15",
    "bookVersion": "1.0.0",
    "prompt": {
        "title": "Knowledge",
        "pipelineUrl": "https://promptbook.studio/promptbook/prepare-knowledge-from-markdown.book#knowledge",
        "parameters": {
            "knowledgeContent": "✨ Promptbook: AI apps in plain Language Write AI applications using plain human language across multiple models and platforms. 🌟 New Features 🤍 The Book Abstract It's time for a paradigm shift! The future of software is written in plain English, French, or Latin. During the computer revolution, we have seen multiple generations of computer languages, from the physical rewiring of the vacuum tubes through low-level machine code to the high-level languages like Python or JavaScript. And now, we're on the edge of the next revolution! It's a revolution of writing software in plain human language that is understandable and executable by both humans and machines – and it's going to change everything! The incredible growth in power of microprocessors and the Moore's Law have been the driving force behind the ever-more powerful languages, and it's been an amazing journey! Similarly, the large language models (like GPT or Claude) are the next big thing in language technology, and they're set to transform the way we interact with computers. This shift will happen whether we're ready or not. Our mission is to make it excellent, not just good. Join us in this journey! 🚀 Get started Take a look at the simple starter kit with books integrated into the Hello World sample applications: 💜 The Promptbook Project Promptbook project is ecosystem of multiple projects and tools, following is a list of most important pieces of the project: Project About Book language Book is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avarars, translators, automations and more. There is also a plugin for VSCode to support .book file extension Promptbook Engine Promptbook engine can run applications written in Book language. It is released as multiple NPM packages and Docker HUB Promptbook Studio Promptbook.studio is a web-based editor and runner for book applications. It is still in the experimental MVP stage. Hello world examples: 🌐 Community & Social Media Join our growing community of developers and users: Platform Description 💬 Discord Join our active developer community for discussions and support 🗣️ GitHub Discussions Technical discussions, feature requests, and community Q&A 👔 LinkedIn Professional updates and industry insights 📱 Facebook General announcements and community engagement 🔗 ptbk.io Official landing page with project information 🖼️ Product & Brand Channels Promptbook.studio 📘 Book Language Blueprint A concise, Markdown-based DSL for crafting AI workflows and automations. Introduction Book is a Markdown-based language that simplifies the creation of AI applications, workflows, and automations. With human-readable commands, you can define inputs, outputs, personas, knowledge sources, and actions—without needing model-specific details. Example Each part of the book defines one of three circles: 1. What: Workflows, Tasks and Parameters What work needs to be done. Each book defines a workflow (scenario or pipeline), which is one or more tasks. Each workflow has a fixed input and output. For example, you have a book that generates an article from a topic. Once it generates an article about AI, once about marketing, once about cooking. The workflow (= your AI program) is the same, only the input and output change. Related commands: 2. Who: Personas Who does the work. Each task is performed by a persona. A persona is a description of your virtual employee. It is a higher abstraction than the model, tokens, temperature, top-k, top-p and other model parameters. You can describe what you want in human language like Jane, creative writer with a sense of sharp humour instead of gpt-4-2024-13-31, temperature 1.2, top-k 40, STOP token \".\\n\",.... Personas can have access to different knowledge, tools and actions. They can also consult their work with other personas or user, if allowed. Related commands: 3. How: Knowledge, Instruments and Actions The resources used by the personas are used to do the work. Related commands: KNOWLEDGE of documents, websites, and other resources INSTRUMENT for real-time data like time, location, weather, stock prices, searching the internet, calculations, etc. ACTION for actions like sending emails, creating files, ending a workflow, etc. General Principles Book language is based on markdown. It is subset of markdown. It is designed to be easy to read and write. It is designed to be understandable by both humans and machines and without specific knowledge of the language. The file has a .book extension and uses UTF-8 encoding without BOM. Books have two variants: flat — just a prompt without structure, and full — with tasks, commands, and prompts. As it is source code, it can leverage all the features of version control systems like git and does not suffer from the problems of binary formats, proprietary formats, or no-code solutions. But unlike programming languages, it is designed to be understandable by non-programmers and non-technical people. 📚 Documentation See detailed guides and API reference in the docs or online. 🔒 Security For information on reporting security vulnerabilities, see our Security Policy. 📦 Packages (for developers) This library is divided into several packages, all are published from single monorepo. You can install all of them at once: Or you can install them separately: ⭐ Marked packages are worth to try first 📚 Dictionary The following glossary is used to clarify certain concepts: General LLM / AI terms Note: This section is not a complete dictionary, more list of general AI / LLM terms that has connection with Promptbook 💯 Core concepts Advanced concepts Data & Knowledge Management Pipeline Control 📚 Knowledge (RAG) - Retrieve and use external information 📽 Media handling - Working with images, audio, video, spreadsheets 🔴 Anomaly detection - Identifying unusual patterns or outputs 🌏 Remote server - Executing workflows on remote infrastructure 🃏 Jokers (conditions) - Adding conditional logic to workflows 🔳 Metaprompting - Creating prompts that generate other prompts Language & Output Control Advanced Generation 🌏 Linguistically typed languages - Type systems for natural language 🌍 Auto-Translations - Automatic multilingual support 👮 Agent adversary expectations - Safety and control mechanisms 🔙 Expectation-aware generation - Outputs that meet defined criteria ⏳ Just-in-time fine-tuning - Dynamic model adaptation 🔍 View more concepts 🚂 Promptbook Engine ➕➖ When to use Promptbook? ➕ When to use See more ➖ When not to use See more 🐜 Known issues 🧼 Intentionally not implemented features ❔ FAQ If you have a question start a discussion, open an issue or write me an email. 📅 Changelog See CHANGELOG.md 📜 License This project is licensed under BUSL 1.1. 🤝 Contributing We welcome contributions! See CONTRIBUTING.md for guidelines. You can also ⭐ star the project, follow us on GitHub or various other social networks.We are open to pull requests, feedback, and suggestions. 🆘 Support & Community Need help with Book language? We're here for you! We welcome contributions and feedback to make Book language better for everyone! "
        },
        "content": "You are experienced data researcher, extract the important knowledge from the document.\n\n# Rules\n\n-   Make pieces of information concise, clear, and easy to understand\n-   One piece of information should be approximately 1 paragraph\n-   Divide the paragraphs by markdown horizontal lines ---\n-   Omit irrelevant information\n-   Group redundant information\n-   Write just extracted information, nothing else\n\n# The document\n\nTake information from this document:\n\n> {knowledgeContent}",
        "modelRequirements": {
            "modelVariant": "CHAT"
        },
        "expectations": {}
    },
    "promptResult": {
        "content": "---\n\n## Overview\n\n**Paradigm Shift in Software Development**  \nA new era of software programming is emerging where applications are written in plain human languages (e.g., English, French, Latin). This shift is driven by advancements in large language models (LLMs) like GPT and Claude, promising more accessible and powerful software development.\n\n---\n\n**Promptbook Project Components**\n\n1. **Book Language**  \n   A human-readable, Markdown-based language for developing AI applications, workflows, and automations like chatbots, knowledge bases, and translators. It emphasizes simplicity and accessibility for non-programmers while maintaining functionality.\n\n2. **Promptbook Engine**  \n   This engine executes applications written in Book language. It is available as multiple NPM packages and Docker images.\n\n3. **Promptbook Studio**  \n   A web-based editor and runner for Book applications, currently in an experimental MVP stage.\n\n---\n\n**Community and Support**\n\n1. **Discord**  \n   Active developer discussions and support.\n\n2. **GitHub Discussions**  \n   Platform for technical discussions, feature requests, and Q&A.\n\n3. **LinkedIn and Facebook**  \n   Professional updates, industry insights, and general announcements.\n\n4. **Official Website**  \n   Project information available at ptbk.io.\n\n---\n\n## Book Language Details\n\n### What: Workflows, Tasks, and Parameters\nDefines the workflow needed to complete tasks. Workflows have fixed inputs and outputs, adaptable for various scenarios (e.g., generating articles on different topics).\n\n### Who: Personas\nDescribes the virtual employees (personas) carrying out tasks. Personas are defined in human language, specifying their traits and roles, and abstract away complex model parameters.\n\n### How: Knowledge, Instruments, and Actions\nOutlines the resources personas use. \n- **KNOWLEDGE**: Documents, websites, etc.\n- **INSTRUMENT**: Real-time data (e.g., time, weather).\n- **ACTION**: Tasks like sending emails or creating files.\n\n---\n\n### General Principles\n- Based on Markdown, easy to read and write.\n- Designed to be understood by both humans and machines.\n- File extension: `.book`, encoded in UTF-8 without BOM.\n- Two variants: flat (simple prompt) and full (structured with tasks, commands, and prompts).\n- Compatible with version control systems like git.\n\n---\n\n## Additional Features and Notes\n\n### Security\n   Follow the Security Policy for reporting vulnerabilities.\n\n### Developer Packages\n   The library consists of multiple packages that can be installed either all at once or individually.\n\n### Glossary of Terms\n   Basic AI/LLM terms and core concepts related to Promptbook, including data management, pipeline control, media handling, and anomaly detection.\n\n### Promptbook Engine\n   Guidelines for when to use the Promptbook engine, known issues, and its limitations.\n\n### Support & Community\n   Contributions and feedback are welcomed to improve the Book language. \n\n---\n\n## License and Contributing\n\n**License**  \n   Project licensed under BUSL 1.1.\n\n**Contributing**  \n   Contributions are welcomed; guidelines available in CONTRIBUTING.md.\n\n**Support**  \n   Community support and resources are provided for handling queries and improvements.",
        "modelName": "gpt-4o-2024-05-13",
        "timing": {
            "start": "2025-05-21T09:08:53.415Z",
            "complete": "2025-05-21T09:09:03.791Z"
        },
        "usage": {
            "price": {
                "value": 0.017385
            },
            "input": {
                "tokensCount": {
                    "value": 1539
                },
                "charactersCount": {
                    "value": 482
                },
                "wordsCount": {
                    "value": 60
                },
                "sentencesCount": {
                    "value": 2
                },
                "linesCount": {
                    "value": 14
                },
                "paragraphsCount": {
                    "value": 6
                },
                "pagesCount": {
                    "value": 1
                }
            },
            "output": {
                "tokensCount": {
                    "value": 646
                },
                "charactersCount": {
                    "value": 3221
                },
                "wordsCount": {
                    "value": 416
                },
                "sentencesCount": {
                    "value": 49
                },
                "linesCount": {
                    "value": 83
                },
                "paragraphsCount": {
                    "value": 33
                },
                "pagesCount": {
                    "value": 2
                }
            }
        },
        "rawPromptContent": "You are experienced data researcher, extract the important knowledge from the document.\n\n# Rules\n\n-   Make pieces of information concise, clear, and easy to understand\n-   One piece of information should be approximately 1 paragraph\n-   Divide the paragraphs by markdown horizontal lines ---\n-   Omit irrelevant information\n-   Group redundant information\n-   Write just extracted information, nothing else\n\n# The document\n\nTake information from this document:\n\n> ✨ Promptbook: AI apps in plain Language Write AI applications using plain human language across multiple models and platforms. 🌟 New Features 🤍 The Book Abstract It's time for a paradigm shift! The future of software is written in plain English, French, or Latin. During the computer revolution, we have seen multiple generations of computer languages, from the physical rewiring of the vacuum tubes through low-level machine code to the high-level languages like Python or JavaScript. And now, we're on the edge of the next revolution! It's a revolution of writing software in plain human language that is understandable and executable by both humans and machines – and it's going to change everything! The incredible growth in power of microprocessors and the Moore's Law have been the driving force behind the ever-more powerful languages, and it's been an amazing journey! Similarly, the large language models (like GPT or Claude) are the next big thing in language technology, and they're set to transform the way we interact with computers. This shift will happen whether we're ready or not. Our mission is to make it excellent, not just good. Join us in this journey! 🚀 Get started Take a look at the simple starter kit with books integrated into the Hello World sample applications: 💜 The Promptbook Project Promptbook project is ecosystem of multiple projects and tools, following is a list of most important pieces of the project: Project About Book language Book is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avarars, translators, automations and more. There is also a plugin for VSCode to support .book file extension Promptbook Engine Promptbook engine can run applications written in Book language. It is released as multiple NPM packages and Docker HUB Promptbook Studio Promptbook.studio is a web-based editor and runner for book applications. It is still in the experimental MVP stage. Hello world examples: 🌐 Community & Social Media Join our growing community of developers and users: Platform Description 💬 Discord Join our active developer community for discussions and support 🗣️ GitHub Discussions Technical discussions, feature requests, and community Q&A 👔 LinkedIn Professional updates and industry insights 📱 Facebook General announcements and community engagement 🔗 ptbk.io Official landing page with project information 🖼️ Product & Brand Channels Promptbook.studio 📘 Book Language Blueprint A concise, Markdown-based DSL for crafting AI workflows and automations. Introduction Book is a Markdown-based language that simplifies the creation of AI applications, workflows, and automations. With human-readable commands, you can define inputs, outputs, personas, knowledge sources, and actions—without needing model-specific details. Example Each part of the book defines one of three circles: 1. What: Workflows, Tasks and Parameters What work needs to be done. Each book defines a workflow (scenario or pipeline), which is one or more tasks. Each workflow has a fixed input and output. For example, you have a book that generates an article from a topic. Once it generates an article about AI, once about marketing, once about cooking. The workflow (= your AI program) is the same, only the input and output change. Related commands: 2. Who: Personas Who does the work. Each task is performed by a persona. A persona is a description of your virtual employee. It is a higher abstraction than the model, tokens, temperature, top-k, top-p and other model parameters. You can describe what you want in human language like Jane, creative writer with a sense of sharp humour instead of gpt-4-2024-13-31, temperature 1.2, top-k 40, STOP token \".\\n\",.... Personas can have access to different knowledge, tools and actions. They can also consult their work with other personas or user, if allowed. Related commands: 3. How: Knowledge, Instruments and Actions The resources used by the personas are used to do the work. Related commands: KNOWLEDGE of documents, websites, and other resources INSTRUMENT for real-time data like time, location, weather, stock prices, searching the internet, calculations, etc. ACTION for actions like sending emails, creating files, ending a workflow, etc. General Principles Book language is based on markdown. It is subset of markdown. It is designed to be easy to read and write. It is designed to be understandable by both humans and machines and without specific knowledge of the language. The file has a .book extension and uses UTF-8 encoding without BOM. Books have two variants: flat — just a prompt without structure, and full — with tasks, commands, and prompts. As it is source code, it can leverage all the features of version control systems like git and does not suffer from the problems of binary formats, proprietary formats, or no-code solutions. But unlike programming languages, it is designed to be understandable by non-programmers and non-technical people. 📚 Documentation See detailed guides and API reference in the docs or online. 🔒 Security For information on reporting security vulnerabilities, see our Security Policy. 📦 Packages (for developers) This library is divided into several packages, all are published from single monorepo. You can install all of them at once: Or you can install them separately: ⭐ Marked packages are worth to try first 📚 Dictionary The following glossary is used to clarify certain concepts: General LLM / AI terms Note: This section is not a complete dictionary, more list of general AI / LLM terms that has connection with Promptbook 💯 Core concepts Advanced concepts Data & Knowledge Management Pipeline Control 📚 Knowledge (RAG) - Retrieve and use external information 📽 Media handling - Working with images, audio, video, spreadsheets 🔴 Anomaly detection - Identifying unusual patterns or outputs 🌏 Remote server - Executing workflows on remote infrastructure 🃏 Jokers (conditions) - Adding conditional logic to workflows 🔳 Metaprompting - Creating prompts that generate other prompts Language & Output Control Advanced Generation 🌏 Linguistically typed languages - Type systems for natural language 🌍 Auto-Translations - Automatic multilingual support 👮 Agent adversary expectations - Safety and control mechanisms 🔙 Expectation-aware generation - Outputs that meet defined criteria ⏳ Just-in-time fine-tuning - Dynamic model adaptation 🔍 View more concepts 🚂 Promptbook Engine ➕➖ When to use Promptbook? ➕ When to use See more ➖ When not to use See more 🐜 Known issues 🧼 Intentionally not implemented features ❔ FAQ If you have a question start a discussion, open an issue or write me an email. 📅 Changelog See CHANGELOG.md 📜 License This project is licensed under BUSL 1.1. 🤝 Contributing We welcome contributions! See CONTRIBUTING.md for guidelines. You can also ⭐ star the project, follow us on GitHub or various other social networks.We are open to pull requests, feedback, and suggestions. 🆘 Support & Community Need help with Book language? We're here for you! We welcome contributions and feedback to make Book language better for everyone! ",
        "rawRequest": {
            "model": "gpt-4o-2024-05-13",
            "messages": [
                {
                    "role": "user",
                    "content": "You are experienced data researcher, extract the important knowledge from the document.\n\n# Rules\n\n-   Make pieces of information concise, clear, and easy to understand\n-   One piece of information should be approximately 1 paragraph\n-   Divide the paragraphs by markdown horizontal lines ---\n-   Omit irrelevant information\n-   Group redundant information\n-   Write just extracted information, nothing else\n\n# The document\n\nTake information from this document:\n\n> ✨ Promptbook: AI apps in plain Language Write AI applications using plain human language across multiple models and platforms. 🌟 New Features 🤍 The Book Abstract It's time for a paradigm shift! The future of software is written in plain English, French, or Latin. During the computer revolution, we have seen multiple generations of computer languages, from the physical rewiring of the vacuum tubes through low-level machine code to the high-level languages like Python or JavaScript. And now, we're on the edge of the next revolution! It's a revolution of writing software in plain human language that is understandable and executable by both humans and machines – and it's going to change everything! The incredible growth in power of microprocessors and the Moore's Law have been the driving force behind the ever-more powerful languages, and it's been an amazing journey! Similarly, the large language models (like GPT or Claude) are the next big thing in language technology, and they're set to transform the way we interact with computers. This shift will happen whether we're ready or not. Our mission is to make it excellent, not just good. Join us in this journey! 🚀 Get started Take a look at the simple starter kit with books integrated into the Hello World sample applications: 💜 The Promptbook Project Promptbook project is ecosystem of multiple projects and tools, following is a list of most important pieces of the project: Project About Book language Book is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avarars, translators, automations and more. There is also a plugin for VSCode to support .book file extension Promptbook Engine Promptbook engine can run applications written in Book language. It is released as multiple NPM packages and Docker HUB Promptbook Studio Promptbook.studio is a web-based editor and runner for book applications. It is still in the experimental MVP stage. Hello world examples: 🌐 Community & Social Media Join our growing community of developers and users: Platform Description 💬 Discord Join our active developer community for discussions and support 🗣️ GitHub Discussions Technical discussions, feature requests, and community Q&A 👔 LinkedIn Professional updates and industry insights 📱 Facebook General announcements and community engagement 🔗 ptbk.io Official landing page with project information 🖼️ Product & Brand Channels Promptbook.studio 📘 Book Language Blueprint A concise, Markdown-based DSL for crafting AI workflows and automations. Introduction Book is a Markdown-based language that simplifies the creation of AI applications, workflows, and automations. With human-readable commands, you can define inputs, outputs, personas, knowledge sources, and actions—without needing model-specific details. Example Each part of the book defines one of three circles: 1. What: Workflows, Tasks and Parameters What work needs to be done. Each book defines a workflow (scenario or pipeline), which is one or more tasks. Each workflow has a fixed input and output. For example, you have a book that generates an article from a topic. Once it generates an article about AI, once about marketing, once about cooking. The workflow (= your AI program) is the same, only the input and output change. Related commands: 2. Who: Personas Who does the work. Each task is performed by a persona. A persona is a description of your virtual employee. It is a higher abstraction than the model, tokens, temperature, top-k, top-p and other model parameters. You can describe what you want in human language like Jane, creative writer with a sense of sharp humour instead of gpt-4-2024-13-31, temperature 1.2, top-k 40, STOP token \".\\n\",.... Personas can have access to different knowledge, tools and actions. They can also consult their work with other personas or user, if allowed. Related commands: 3. How: Knowledge, Instruments and Actions The resources used by the personas are used to do the work. Related commands: KNOWLEDGE of documents, websites, and other resources INSTRUMENT for real-time data like time, location, weather, stock prices, searching the internet, calculations, etc. ACTION for actions like sending emails, creating files, ending a workflow, etc. General Principles Book language is based on markdown. It is subset of markdown. It is designed to be easy to read and write. It is designed to be understandable by both humans and machines and without specific knowledge of the language. The file has a .book extension and uses UTF-8 encoding without BOM. Books have two variants: flat — just a prompt without structure, and full — with tasks, commands, and prompts. As it is source code, it can leverage all the features of version control systems like git and does not suffer from the problems of binary formats, proprietary formats, or no-code solutions. But unlike programming languages, it is designed to be understandable by non-programmers and non-technical people. 📚 Documentation See detailed guides and API reference in the docs or online. 🔒 Security For information on reporting security vulnerabilities, see our Security Policy. 📦 Packages (for developers) This library is divided into several packages, all are published from single monorepo. You can install all of them at once: Or you can install them separately: ⭐ Marked packages are worth to try first 📚 Dictionary The following glossary is used to clarify certain concepts: General LLM / AI terms Note: This section is not a complete dictionary, more list of general AI / LLM terms that has connection with Promptbook 💯 Core concepts Advanced concepts Data & Knowledge Management Pipeline Control 📚 Knowledge (RAG) - Retrieve and use external information 📽 Media handling - Working with images, audio, video, spreadsheets 🔴 Anomaly detection - Identifying unusual patterns or outputs 🌏 Remote server - Executing workflows on remote infrastructure 🃏 Jokers (conditions) - Adding conditional logic to workflows 🔳 Metaprompting - Creating prompts that generate other prompts Language & Output Control Advanced Generation 🌏 Linguistically typed languages - Type systems for natural language 🌍 Auto-Translations - Automatic multilingual support 👮 Agent adversary expectations - Safety and control mechanisms 🔙 Expectation-aware generation - Outputs that meet defined criteria ⏳ Just-in-time fine-tuning - Dynamic model adaptation 🔍 View more concepts 🚂 Promptbook Engine ➕➖ When to use Promptbook? ➕ When to use See more ➖ When not to use See more 🐜 Known issues 🧼 Intentionally not implemented features ❔ FAQ If you have a question start a discussion, open an issue or write me an email. 📅 Changelog See CHANGELOG.md 📜 License This project is licensed under BUSL 1.1. 🤝 Contributing We welcome contributions! See CONTRIBUTING.md for guidelines. You can also ⭐ star the project, follow us on GitHub or various other social networks.We are open to pull requests, feedback, and suggestions. 🆘 Support & Community Need help with Book language? We're here for you! We welcome contributions and feedback to make Book language better for everyone! "
                }
            ]
        },
        "rawResponse": {
            "id": "chatcmpl-BZZjSf1N4yyA51B3J0EPyMKJdkYtc",
            "object": "chat.completion",
            "created": 1747818534,
            "model": "gpt-4o-2024-05-13",
            "choices": [
                {
                    "index": 0,
                    "message": {
                        "role": "assistant",
                        "content": "---\n\n## Overview\n\n**Paradigm Shift in Software Development**  \nA new era of software programming is emerging where applications are written in plain human languages (e.g., English, French, Latin). This shift is driven by advancements in large language models (LLMs) like GPT and Claude, promising more accessible and powerful software development.\n\n---\n\n**Promptbook Project Components**\n\n1. **Book Language**  \n   A human-readable, Markdown-based language for developing AI applications, workflows, and automations like chatbots, knowledge bases, and translators. It emphasizes simplicity and accessibility for non-programmers while maintaining functionality.\n\n2. **Promptbook Engine**  \n   This engine executes applications written in Book language. It is available as multiple NPM packages and Docker images.\n\n3. **Promptbook Studio**  \n   A web-based editor and runner for Book applications, currently in an experimental MVP stage.\n\n---\n\n**Community and Support**\n\n1. **Discord**  \n   Active developer discussions and support.\n\n2. **GitHub Discussions**  \n   Platform for technical discussions, feature requests, and Q&A.\n\n3. **LinkedIn and Facebook**  \n   Professional updates, industry insights, and general announcements.\n\n4. **Official Website**  \n   Project information available at ptbk.io.\n\n---\n\n## Book Language Details\n\n### What: Workflows, Tasks, and Parameters\nDefines the workflow needed to complete tasks. Workflows have fixed inputs and outputs, adaptable for various scenarios (e.g., generating articles on different topics).\n\n### Who: Personas\nDescribes the virtual employees (personas) carrying out tasks. Personas are defined in human language, specifying their traits and roles, and abstract away complex model parameters.\n\n### How: Knowledge, Instruments, and Actions\nOutlines the resources personas use. \n- **KNOWLEDGE**: Documents, websites, etc.\n- **INSTRUMENT**: Real-time data (e.g., time, weather).\n- **ACTION**: Tasks like sending emails or creating files.\n\n---\n\n### General Principles\n- Based on Markdown, easy to read and write.\n- Designed to be understood by both humans and machines.\n- File extension: `.book`, encoded in UTF-8 without BOM.\n- Two variants: flat (simple prompt) and full (structured with tasks, commands, and prompts).\n- Compatible with version control systems like git.\n\n---\n\n## Additional Features and Notes\n\n### Security\n   Follow the Security Policy for reporting vulnerabilities.\n\n### Developer Packages\n   The library consists of multiple packages that can be installed either all at once or individually.\n\n### Glossary of Terms\n   Basic AI/LLM terms and core concepts related to Promptbook, including data management, pipeline control, media handling, and anomaly detection.\n\n### Promptbook Engine\n   Guidelines for when to use the Promptbook engine, known issues, and its limitations.\n\n### Support & Community\n   Contributions and feedback are welcomed to improve the Book language. \n\n---\n\n## License and Contributing\n\n**License**  \n   Project licensed under BUSL 1.1.\n\n**Contributing**  \n   Contributions are welcomed; guidelines available in CONTRIBUTING.md.\n\n**Support**  \n   Community support and resources are provided for handling queries and improvements.",
                        "refusal": null,
                        "annotations": []
                    },
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 1539,
                "completion_tokens": 646,
                "total_tokens": 2185,
                "prompt_tokens_details": {
                    "cached_tokens": 0,
                    "audio_tokens": 0
                },
                "completion_tokens_details": {
                    "reasoning_tokens": 0,
                    "audio_tokens": 0,
                    "accepted_prediction_tokens": 0,
                    "rejected_prediction_tokens": 0
                }
            },
            "service_tier": "default",
            "system_fingerprint": "fp_a9047283ac"
        }
    }
}
